#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_1197758814798533388) {
   out_1197758814798533388[0] = 0;
   out_1197758814798533388[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_1197758814798533388[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_1197758814798533388[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_1197758814798533388[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_1197758814798533388[5] = -sin(in_vec[1]);
   out_1197758814798533388[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_1197758814798533388[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_1197758814798533388[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_1197758814798533388[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_1197758814798533388[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_1197758814798533388[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_1197758814798533388[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_1197758814798533388[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_1197758814798533388[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_1197758814798533388[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_1197758814798533388[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_1197758814798533388[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_4286215774710425169) {
   out_4286215774710425169[0] = delta_x[0] + nom_x[0];
   out_4286215774710425169[1] = delta_x[1] + nom_x[1];
   out_4286215774710425169[2] = delta_x[2] + nom_x[2];
   out_4286215774710425169[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_4286215774710425169[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_4286215774710425169[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_4286215774710425169[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_4286215774710425169[7] = delta_x[6] + nom_x[7];
   out_4286215774710425169[8] = delta_x[7] + nom_x[8];
   out_4286215774710425169[9] = delta_x[8] + nom_x[9];
   out_4286215774710425169[10] = delta_x[9] + nom_x[10];
   out_4286215774710425169[11] = delta_x[10] + nom_x[11];
   out_4286215774710425169[12] = delta_x[11] + nom_x[12];
   out_4286215774710425169[13] = delta_x[12] + nom_x[13];
   out_4286215774710425169[14] = delta_x[13] + nom_x[14];
   out_4286215774710425169[15] = delta_x[14] + nom_x[15];
   out_4286215774710425169[16] = delta_x[15] + nom_x[16];
   out_4286215774710425169[17] = delta_x[16] + nom_x[17];
   out_4286215774710425169[18] = delta_x[17] + nom_x[18];
   out_4286215774710425169[19] = delta_x[18] + nom_x[19];
   out_4286215774710425169[20] = delta_x[19] + nom_x[20];
   out_4286215774710425169[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_3781385446178574208) {
   out_3781385446178574208[0] = -nom_x[0] + true_x[0];
   out_3781385446178574208[1] = -nom_x[1] + true_x[1];
   out_3781385446178574208[2] = -nom_x[2] + true_x[2];
   out_3781385446178574208[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_3781385446178574208[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_3781385446178574208[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_3781385446178574208[6] = -nom_x[7] + true_x[7];
   out_3781385446178574208[7] = -nom_x[8] + true_x[8];
   out_3781385446178574208[8] = -nom_x[9] + true_x[9];
   out_3781385446178574208[9] = -nom_x[10] + true_x[10];
   out_3781385446178574208[10] = -nom_x[11] + true_x[11];
   out_3781385446178574208[11] = -nom_x[12] + true_x[12];
   out_3781385446178574208[12] = -nom_x[13] + true_x[13];
   out_3781385446178574208[13] = -nom_x[14] + true_x[14];
   out_3781385446178574208[14] = -nom_x[15] + true_x[15];
   out_3781385446178574208[15] = -nom_x[16] + true_x[16];
   out_3781385446178574208[16] = -nom_x[17] + true_x[17];
   out_3781385446178574208[17] = -nom_x[18] + true_x[18];
   out_3781385446178574208[18] = -nom_x[19] + true_x[19];
   out_3781385446178574208[19] = -nom_x[20] + true_x[20];
   out_3781385446178574208[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_5816692744659529436) {
   out_5816692744659529436[0] = 1.0;
   out_5816692744659529436[1] = 0;
   out_5816692744659529436[2] = 0;
   out_5816692744659529436[3] = 0;
   out_5816692744659529436[4] = 0;
   out_5816692744659529436[5] = 0;
   out_5816692744659529436[6] = 0;
   out_5816692744659529436[7] = 0;
   out_5816692744659529436[8] = 0;
   out_5816692744659529436[9] = 0;
   out_5816692744659529436[10] = 0;
   out_5816692744659529436[11] = 0;
   out_5816692744659529436[12] = 0;
   out_5816692744659529436[13] = 0;
   out_5816692744659529436[14] = 0;
   out_5816692744659529436[15] = 0;
   out_5816692744659529436[16] = 0;
   out_5816692744659529436[17] = 0;
   out_5816692744659529436[18] = 0;
   out_5816692744659529436[19] = 0;
   out_5816692744659529436[20] = 0;
   out_5816692744659529436[21] = 0;
   out_5816692744659529436[22] = 1.0;
   out_5816692744659529436[23] = 0;
   out_5816692744659529436[24] = 0;
   out_5816692744659529436[25] = 0;
   out_5816692744659529436[26] = 0;
   out_5816692744659529436[27] = 0;
   out_5816692744659529436[28] = 0;
   out_5816692744659529436[29] = 0;
   out_5816692744659529436[30] = 0;
   out_5816692744659529436[31] = 0;
   out_5816692744659529436[32] = 0;
   out_5816692744659529436[33] = 0;
   out_5816692744659529436[34] = 0;
   out_5816692744659529436[35] = 0;
   out_5816692744659529436[36] = 0;
   out_5816692744659529436[37] = 0;
   out_5816692744659529436[38] = 0;
   out_5816692744659529436[39] = 0;
   out_5816692744659529436[40] = 0;
   out_5816692744659529436[41] = 0;
   out_5816692744659529436[42] = 0;
   out_5816692744659529436[43] = 0;
   out_5816692744659529436[44] = 1.0;
   out_5816692744659529436[45] = 0;
   out_5816692744659529436[46] = 0;
   out_5816692744659529436[47] = 0;
   out_5816692744659529436[48] = 0;
   out_5816692744659529436[49] = 0;
   out_5816692744659529436[50] = 0;
   out_5816692744659529436[51] = 0;
   out_5816692744659529436[52] = 0;
   out_5816692744659529436[53] = 0;
   out_5816692744659529436[54] = 0;
   out_5816692744659529436[55] = 0;
   out_5816692744659529436[56] = 0;
   out_5816692744659529436[57] = 0;
   out_5816692744659529436[58] = 0;
   out_5816692744659529436[59] = 0;
   out_5816692744659529436[60] = 0;
   out_5816692744659529436[61] = 0;
   out_5816692744659529436[62] = 0;
   out_5816692744659529436[63] = 0;
   out_5816692744659529436[64] = 0;
   out_5816692744659529436[65] = 0;
   out_5816692744659529436[66] = -0.5*state[4];
   out_5816692744659529436[67] = -0.5*state[5];
   out_5816692744659529436[68] = -0.5*state[6];
   out_5816692744659529436[69] = 0;
   out_5816692744659529436[70] = 0;
   out_5816692744659529436[71] = 0;
   out_5816692744659529436[72] = 0;
   out_5816692744659529436[73] = 0;
   out_5816692744659529436[74] = 0;
   out_5816692744659529436[75] = 0;
   out_5816692744659529436[76] = 0;
   out_5816692744659529436[77] = 0;
   out_5816692744659529436[78] = 0;
   out_5816692744659529436[79] = 0;
   out_5816692744659529436[80] = 0;
   out_5816692744659529436[81] = 0;
   out_5816692744659529436[82] = 0;
   out_5816692744659529436[83] = 0;
   out_5816692744659529436[84] = 0;
   out_5816692744659529436[85] = 0;
   out_5816692744659529436[86] = 0;
   out_5816692744659529436[87] = 0.5*state[3];
   out_5816692744659529436[88] = 0.5*state[6];
   out_5816692744659529436[89] = -0.5*state[5];
   out_5816692744659529436[90] = 0;
   out_5816692744659529436[91] = 0;
   out_5816692744659529436[92] = 0;
   out_5816692744659529436[93] = 0;
   out_5816692744659529436[94] = 0;
   out_5816692744659529436[95] = 0;
   out_5816692744659529436[96] = 0;
   out_5816692744659529436[97] = 0;
   out_5816692744659529436[98] = 0;
   out_5816692744659529436[99] = 0;
   out_5816692744659529436[100] = 0;
   out_5816692744659529436[101] = 0;
   out_5816692744659529436[102] = 0;
   out_5816692744659529436[103] = 0;
   out_5816692744659529436[104] = 0;
   out_5816692744659529436[105] = 0;
   out_5816692744659529436[106] = 0;
   out_5816692744659529436[107] = 0;
   out_5816692744659529436[108] = -0.5*state[6];
   out_5816692744659529436[109] = 0.5*state[3];
   out_5816692744659529436[110] = 0.5*state[4];
   out_5816692744659529436[111] = 0;
   out_5816692744659529436[112] = 0;
   out_5816692744659529436[113] = 0;
   out_5816692744659529436[114] = 0;
   out_5816692744659529436[115] = 0;
   out_5816692744659529436[116] = 0;
   out_5816692744659529436[117] = 0;
   out_5816692744659529436[118] = 0;
   out_5816692744659529436[119] = 0;
   out_5816692744659529436[120] = 0;
   out_5816692744659529436[121] = 0;
   out_5816692744659529436[122] = 0;
   out_5816692744659529436[123] = 0;
   out_5816692744659529436[124] = 0;
   out_5816692744659529436[125] = 0;
   out_5816692744659529436[126] = 0;
   out_5816692744659529436[127] = 0;
   out_5816692744659529436[128] = 0;
   out_5816692744659529436[129] = 0.5*state[5];
   out_5816692744659529436[130] = -0.5*state[4];
   out_5816692744659529436[131] = 0.5*state[3];
   out_5816692744659529436[132] = 0;
   out_5816692744659529436[133] = 0;
   out_5816692744659529436[134] = 0;
   out_5816692744659529436[135] = 0;
   out_5816692744659529436[136] = 0;
   out_5816692744659529436[137] = 0;
   out_5816692744659529436[138] = 0;
   out_5816692744659529436[139] = 0;
   out_5816692744659529436[140] = 0;
   out_5816692744659529436[141] = 0;
   out_5816692744659529436[142] = 0;
   out_5816692744659529436[143] = 0;
   out_5816692744659529436[144] = 0;
   out_5816692744659529436[145] = 0;
   out_5816692744659529436[146] = 0;
   out_5816692744659529436[147] = 0;
   out_5816692744659529436[148] = 0;
   out_5816692744659529436[149] = 0;
   out_5816692744659529436[150] = 0;
   out_5816692744659529436[151] = 0;
   out_5816692744659529436[152] = 0;
   out_5816692744659529436[153] = 1.0;
   out_5816692744659529436[154] = 0;
   out_5816692744659529436[155] = 0;
   out_5816692744659529436[156] = 0;
   out_5816692744659529436[157] = 0;
   out_5816692744659529436[158] = 0;
   out_5816692744659529436[159] = 0;
   out_5816692744659529436[160] = 0;
   out_5816692744659529436[161] = 0;
   out_5816692744659529436[162] = 0;
   out_5816692744659529436[163] = 0;
   out_5816692744659529436[164] = 0;
   out_5816692744659529436[165] = 0;
   out_5816692744659529436[166] = 0;
   out_5816692744659529436[167] = 0;
   out_5816692744659529436[168] = 0;
   out_5816692744659529436[169] = 0;
   out_5816692744659529436[170] = 0;
   out_5816692744659529436[171] = 0;
   out_5816692744659529436[172] = 0;
   out_5816692744659529436[173] = 0;
   out_5816692744659529436[174] = 0;
   out_5816692744659529436[175] = 1.0;
   out_5816692744659529436[176] = 0;
   out_5816692744659529436[177] = 0;
   out_5816692744659529436[178] = 0;
   out_5816692744659529436[179] = 0;
   out_5816692744659529436[180] = 0;
   out_5816692744659529436[181] = 0;
   out_5816692744659529436[182] = 0;
   out_5816692744659529436[183] = 0;
   out_5816692744659529436[184] = 0;
   out_5816692744659529436[185] = 0;
   out_5816692744659529436[186] = 0;
   out_5816692744659529436[187] = 0;
   out_5816692744659529436[188] = 0;
   out_5816692744659529436[189] = 0;
   out_5816692744659529436[190] = 0;
   out_5816692744659529436[191] = 0;
   out_5816692744659529436[192] = 0;
   out_5816692744659529436[193] = 0;
   out_5816692744659529436[194] = 0;
   out_5816692744659529436[195] = 0;
   out_5816692744659529436[196] = 0;
   out_5816692744659529436[197] = 1.0;
   out_5816692744659529436[198] = 0;
   out_5816692744659529436[199] = 0;
   out_5816692744659529436[200] = 0;
   out_5816692744659529436[201] = 0;
   out_5816692744659529436[202] = 0;
   out_5816692744659529436[203] = 0;
   out_5816692744659529436[204] = 0;
   out_5816692744659529436[205] = 0;
   out_5816692744659529436[206] = 0;
   out_5816692744659529436[207] = 0;
   out_5816692744659529436[208] = 0;
   out_5816692744659529436[209] = 0;
   out_5816692744659529436[210] = 0;
   out_5816692744659529436[211] = 0;
   out_5816692744659529436[212] = 0;
   out_5816692744659529436[213] = 0;
   out_5816692744659529436[214] = 0;
   out_5816692744659529436[215] = 0;
   out_5816692744659529436[216] = 0;
   out_5816692744659529436[217] = 0;
   out_5816692744659529436[218] = 0;
   out_5816692744659529436[219] = 1.0;
   out_5816692744659529436[220] = 0;
   out_5816692744659529436[221] = 0;
   out_5816692744659529436[222] = 0;
   out_5816692744659529436[223] = 0;
   out_5816692744659529436[224] = 0;
   out_5816692744659529436[225] = 0;
   out_5816692744659529436[226] = 0;
   out_5816692744659529436[227] = 0;
   out_5816692744659529436[228] = 0;
   out_5816692744659529436[229] = 0;
   out_5816692744659529436[230] = 0;
   out_5816692744659529436[231] = 0;
   out_5816692744659529436[232] = 0;
   out_5816692744659529436[233] = 0;
   out_5816692744659529436[234] = 0;
   out_5816692744659529436[235] = 0;
   out_5816692744659529436[236] = 0;
   out_5816692744659529436[237] = 0;
   out_5816692744659529436[238] = 0;
   out_5816692744659529436[239] = 0;
   out_5816692744659529436[240] = 0;
   out_5816692744659529436[241] = 1.0;
   out_5816692744659529436[242] = 0;
   out_5816692744659529436[243] = 0;
   out_5816692744659529436[244] = 0;
   out_5816692744659529436[245] = 0;
   out_5816692744659529436[246] = 0;
   out_5816692744659529436[247] = 0;
   out_5816692744659529436[248] = 0;
   out_5816692744659529436[249] = 0;
   out_5816692744659529436[250] = 0;
   out_5816692744659529436[251] = 0;
   out_5816692744659529436[252] = 0;
   out_5816692744659529436[253] = 0;
   out_5816692744659529436[254] = 0;
   out_5816692744659529436[255] = 0;
   out_5816692744659529436[256] = 0;
   out_5816692744659529436[257] = 0;
   out_5816692744659529436[258] = 0;
   out_5816692744659529436[259] = 0;
   out_5816692744659529436[260] = 0;
   out_5816692744659529436[261] = 0;
   out_5816692744659529436[262] = 0;
   out_5816692744659529436[263] = 1.0;
   out_5816692744659529436[264] = 0;
   out_5816692744659529436[265] = 0;
   out_5816692744659529436[266] = 0;
   out_5816692744659529436[267] = 0;
   out_5816692744659529436[268] = 0;
   out_5816692744659529436[269] = 0;
   out_5816692744659529436[270] = 0;
   out_5816692744659529436[271] = 0;
   out_5816692744659529436[272] = 0;
   out_5816692744659529436[273] = 0;
   out_5816692744659529436[274] = 0;
   out_5816692744659529436[275] = 0;
   out_5816692744659529436[276] = 0;
   out_5816692744659529436[277] = 0;
   out_5816692744659529436[278] = 0;
   out_5816692744659529436[279] = 0;
   out_5816692744659529436[280] = 0;
   out_5816692744659529436[281] = 0;
   out_5816692744659529436[282] = 0;
   out_5816692744659529436[283] = 0;
   out_5816692744659529436[284] = 0;
   out_5816692744659529436[285] = 1.0;
   out_5816692744659529436[286] = 0;
   out_5816692744659529436[287] = 0;
   out_5816692744659529436[288] = 0;
   out_5816692744659529436[289] = 0;
   out_5816692744659529436[290] = 0;
   out_5816692744659529436[291] = 0;
   out_5816692744659529436[292] = 0;
   out_5816692744659529436[293] = 0;
   out_5816692744659529436[294] = 0;
   out_5816692744659529436[295] = 0;
   out_5816692744659529436[296] = 0;
   out_5816692744659529436[297] = 0;
   out_5816692744659529436[298] = 0;
   out_5816692744659529436[299] = 0;
   out_5816692744659529436[300] = 0;
   out_5816692744659529436[301] = 0;
   out_5816692744659529436[302] = 0;
   out_5816692744659529436[303] = 0;
   out_5816692744659529436[304] = 0;
   out_5816692744659529436[305] = 0;
   out_5816692744659529436[306] = 0;
   out_5816692744659529436[307] = 1.0;
   out_5816692744659529436[308] = 0;
   out_5816692744659529436[309] = 0;
   out_5816692744659529436[310] = 0;
   out_5816692744659529436[311] = 0;
   out_5816692744659529436[312] = 0;
   out_5816692744659529436[313] = 0;
   out_5816692744659529436[314] = 0;
   out_5816692744659529436[315] = 0;
   out_5816692744659529436[316] = 0;
   out_5816692744659529436[317] = 0;
   out_5816692744659529436[318] = 0;
   out_5816692744659529436[319] = 0;
   out_5816692744659529436[320] = 0;
   out_5816692744659529436[321] = 0;
   out_5816692744659529436[322] = 0;
   out_5816692744659529436[323] = 0;
   out_5816692744659529436[324] = 0;
   out_5816692744659529436[325] = 0;
   out_5816692744659529436[326] = 0;
   out_5816692744659529436[327] = 0;
   out_5816692744659529436[328] = 0;
   out_5816692744659529436[329] = 1.0;
   out_5816692744659529436[330] = 0;
   out_5816692744659529436[331] = 0;
   out_5816692744659529436[332] = 0;
   out_5816692744659529436[333] = 0;
   out_5816692744659529436[334] = 0;
   out_5816692744659529436[335] = 0;
   out_5816692744659529436[336] = 0;
   out_5816692744659529436[337] = 0;
   out_5816692744659529436[338] = 0;
   out_5816692744659529436[339] = 0;
   out_5816692744659529436[340] = 0;
   out_5816692744659529436[341] = 0;
   out_5816692744659529436[342] = 0;
   out_5816692744659529436[343] = 0;
   out_5816692744659529436[344] = 0;
   out_5816692744659529436[345] = 0;
   out_5816692744659529436[346] = 0;
   out_5816692744659529436[347] = 0;
   out_5816692744659529436[348] = 0;
   out_5816692744659529436[349] = 0;
   out_5816692744659529436[350] = 0;
   out_5816692744659529436[351] = 1.0;
   out_5816692744659529436[352] = 0;
   out_5816692744659529436[353] = 0;
   out_5816692744659529436[354] = 0;
   out_5816692744659529436[355] = 0;
   out_5816692744659529436[356] = 0;
   out_5816692744659529436[357] = 0;
   out_5816692744659529436[358] = 0;
   out_5816692744659529436[359] = 0;
   out_5816692744659529436[360] = 0;
   out_5816692744659529436[361] = 0;
   out_5816692744659529436[362] = 0;
   out_5816692744659529436[363] = 0;
   out_5816692744659529436[364] = 0;
   out_5816692744659529436[365] = 0;
   out_5816692744659529436[366] = 0;
   out_5816692744659529436[367] = 0;
   out_5816692744659529436[368] = 0;
   out_5816692744659529436[369] = 0;
   out_5816692744659529436[370] = 0;
   out_5816692744659529436[371] = 0;
   out_5816692744659529436[372] = 0;
   out_5816692744659529436[373] = 1.0;
   out_5816692744659529436[374] = 0;
   out_5816692744659529436[375] = 0;
   out_5816692744659529436[376] = 0;
   out_5816692744659529436[377] = 0;
   out_5816692744659529436[378] = 0;
   out_5816692744659529436[379] = 0;
   out_5816692744659529436[380] = 0;
   out_5816692744659529436[381] = 0;
   out_5816692744659529436[382] = 0;
   out_5816692744659529436[383] = 0;
   out_5816692744659529436[384] = 0;
   out_5816692744659529436[385] = 0;
   out_5816692744659529436[386] = 0;
   out_5816692744659529436[387] = 0;
   out_5816692744659529436[388] = 0;
   out_5816692744659529436[389] = 0;
   out_5816692744659529436[390] = 0;
   out_5816692744659529436[391] = 0;
   out_5816692744659529436[392] = 0;
   out_5816692744659529436[393] = 0;
   out_5816692744659529436[394] = 0;
   out_5816692744659529436[395] = 1.0;
   out_5816692744659529436[396] = 0;
   out_5816692744659529436[397] = 0;
   out_5816692744659529436[398] = 0;
   out_5816692744659529436[399] = 0;
   out_5816692744659529436[400] = 0;
   out_5816692744659529436[401] = 0;
   out_5816692744659529436[402] = 0;
   out_5816692744659529436[403] = 0;
   out_5816692744659529436[404] = 0;
   out_5816692744659529436[405] = 0;
   out_5816692744659529436[406] = 0;
   out_5816692744659529436[407] = 0;
   out_5816692744659529436[408] = 0;
   out_5816692744659529436[409] = 0;
   out_5816692744659529436[410] = 0;
   out_5816692744659529436[411] = 0;
   out_5816692744659529436[412] = 0;
   out_5816692744659529436[413] = 0;
   out_5816692744659529436[414] = 0;
   out_5816692744659529436[415] = 0;
   out_5816692744659529436[416] = 0;
   out_5816692744659529436[417] = 1.0;
   out_5816692744659529436[418] = 0;
   out_5816692744659529436[419] = 0;
   out_5816692744659529436[420] = 0;
   out_5816692744659529436[421] = 0;
   out_5816692744659529436[422] = 0;
   out_5816692744659529436[423] = 0;
   out_5816692744659529436[424] = 0;
   out_5816692744659529436[425] = 0;
   out_5816692744659529436[426] = 0;
   out_5816692744659529436[427] = 0;
   out_5816692744659529436[428] = 0;
   out_5816692744659529436[429] = 0;
   out_5816692744659529436[430] = 0;
   out_5816692744659529436[431] = 0;
   out_5816692744659529436[432] = 0;
   out_5816692744659529436[433] = 0;
   out_5816692744659529436[434] = 0;
   out_5816692744659529436[435] = 0;
   out_5816692744659529436[436] = 0;
   out_5816692744659529436[437] = 0;
   out_5816692744659529436[438] = 0;
   out_5816692744659529436[439] = 1.0;
   out_5816692744659529436[440] = 0;
   out_5816692744659529436[441] = 0;
   out_5816692744659529436[442] = 0;
   out_5816692744659529436[443] = 0;
   out_5816692744659529436[444] = 0;
   out_5816692744659529436[445] = 0;
   out_5816692744659529436[446] = 0;
   out_5816692744659529436[447] = 0;
   out_5816692744659529436[448] = 0;
   out_5816692744659529436[449] = 0;
   out_5816692744659529436[450] = 0;
   out_5816692744659529436[451] = 0;
   out_5816692744659529436[452] = 0;
   out_5816692744659529436[453] = 0;
   out_5816692744659529436[454] = 0;
   out_5816692744659529436[455] = 0;
   out_5816692744659529436[456] = 0;
   out_5816692744659529436[457] = 0;
   out_5816692744659529436[458] = 0;
   out_5816692744659529436[459] = 0;
   out_5816692744659529436[460] = 0;
   out_5816692744659529436[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_5690960620373720106) {
   out_5690960620373720106[0] = dt*state[7] + state[0];
   out_5690960620373720106[1] = dt*state[8] + state[1];
   out_5690960620373720106[2] = dt*state[9] + state[2];
   out_5690960620373720106[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_5690960620373720106[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_5690960620373720106[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_5690960620373720106[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_5690960620373720106[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_5690960620373720106[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_5690960620373720106[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_5690960620373720106[10] = state[10];
   out_5690960620373720106[11] = state[11];
   out_5690960620373720106[12] = state[12];
   out_5690960620373720106[13] = state[13];
   out_5690960620373720106[14] = state[14];
   out_5690960620373720106[15] = state[15];
   out_5690960620373720106[16] = state[16];
   out_5690960620373720106[17] = state[17];
   out_5690960620373720106[18] = state[18];
   out_5690960620373720106[19] = state[19];
   out_5690960620373720106[20] = state[20];
   out_5690960620373720106[21] = state[21];
}
void F_fun(double *state, double dt, double *out_1708363142813755465) {
   out_1708363142813755465[0] = 1;
   out_1708363142813755465[1] = 0;
   out_1708363142813755465[2] = 0;
   out_1708363142813755465[3] = 0;
   out_1708363142813755465[4] = 0;
   out_1708363142813755465[5] = 0;
   out_1708363142813755465[6] = dt;
   out_1708363142813755465[7] = 0;
   out_1708363142813755465[8] = 0;
   out_1708363142813755465[9] = 0;
   out_1708363142813755465[10] = 0;
   out_1708363142813755465[11] = 0;
   out_1708363142813755465[12] = 0;
   out_1708363142813755465[13] = 0;
   out_1708363142813755465[14] = 0;
   out_1708363142813755465[15] = 0;
   out_1708363142813755465[16] = 0;
   out_1708363142813755465[17] = 0;
   out_1708363142813755465[18] = 0;
   out_1708363142813755465[19] = 0;
   out_1708363142813755465[20] = 0;
   out_1708363142813755465[21] = 0;
   out_1708363142813755465[22] = 1;
   out_1708363142813755465[23] = 0;
   out_1708363142813755465[24] = 0;
   out_1708363142813755465[25] = 0;
   out_1708363142813755465[26] = 0;
   out_1708363142813755465[27] = 0;
   out_1708363142813755465[28] = dt;
   out_1708363142813755465[29] = 0;
   out_1708363142813755465[30] = 0;
   out_1708363142813755465[31] = 0;
   out_1708363142813755465[32] = 0;
   out_1708363142813755465[33] = 0;
   out_1708363142813755465[34] = 0;
   out_1708363142813755465[35] = 0;
   out_1708363142813755465[36] = 0;
   out_1708363142813755465[37] = 0;
   out_1708363142813755465[38] = 0;
   out_1708363142813755465[39] = 0;
   out_1708363142813755465[40] = 0;
   out_1708363142813755465[41] = 0;
   out_1708363142813755465[42] = 0;
   out_1708363142813755465[43] = 0;
   out_1708363142813755465[44] = 1;
   out_1708363142813755465[45] = 0;
   out_1708363142813755465[46] = 0;
   out_1708363142813755465[47] = 0;
   out_1708363142813755465[48] = 0;
   out_1708363142813755465[49] = 0;
   out_1708363142813755465[50] = dt;
   out_1708363142813755465[51] = 0;
   out_1708363142813755465[52] = 0;
   out_1708363142813755465[53] = 0;
   out_1708363142813755465[54] = 0;
   out_1708363142813755465[55] = 0;
   out_1708363142813755465[56] = 0;
   out_1708363142813755465[57] = 0;
   out_1708363142813755465[58] = 0;
   out_1708363142813755465[59] = 0;
   out_1708363142813755465[60] = 0;
   out_1708363142813755465[61] = 0;
   out_1708363142813755465[62] = 0;
   out_1708363142813755465[63] = 0;
   out_1708363142813755465[64] = 0;
   out_1708363142813755465[65] = 0;
   out_1708363142813755465[66] = 1;
   out_1708363142813755465[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_1708363142813755465[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_1708363142813755465[69] = 0;
   out_1708363142813755465[70] = 0;
   out_1708363142813755465[71] = 0;
   out_1708363142813755465[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_1708363142813755465[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_1708363142813755465[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_1708363142813755465[75] = 0;
   out_1708363142813755465[76] = 0;
   out_1708363142813755465[77] = 0;
   out_1708363142813755465[78] = 0;
   out_1708363142813755465[79] = 0;
   out_1708363142813755465[80] = 0;
   out_1708363142813755465[81] = 0;
   out_1708363142813755465[82] = 0;
   out_1708363142813755465[83] = 0;
   out_1708363142813755465[84] = 0;
   out_1708363142813755465[85] = 0;
   out_1708363142813755465[86] = 0;
   out_1708363142813755465[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_1708363142813755465[88] = 1;
   out_1708363142813755465[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_1708363142813755465[90] = 0;
   out_1708363142813755465[91] = 0;
   out_1708363142813755465[92] = 0;
   out_1708363142813755465[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_1708363142813755465[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_1708363142813755465[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_1708363142813755465[96] = 0;
   out_1708363142813755465[97] = 0;
   out_1708363142813755465[98] = 0;
   out_1708363142813755465[99] = 0;
   out_1708363142813755465[100] = 0;
   out_1708363142813755465[101] = 0;
   out_1708363142813755465[102] = 0;
   out_1708363142813755465[103] = 0;
   out_1708363142813755465[104] = 0;
   out_1708363142813755465[105] = 0;
   out_1708363142813755465[106] = 0;
   out_1708363142813755465[107] = 0;
   out_1708363142813755465[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_1708363142813755465[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_1708363142813755465[110] = 1;
   out_1708363142813755465[111] = 0;
   out_1708363142813755465[112] = 0;
   out_1708363142813755465[113] = 0;
   out_1708363142813755465[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_1708363142813755465[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_1708363142813755465[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_1708363142813755465[117] = 0;
   out_1708363142813755465[118] = 0;
   out_1708363142813755465[119] = 0;
   out_1708363142813755465[120] = 0;
   out_1708363142813755465[121] = 0;
   out_1708363142813755465[122] = 0;
   out_1708363142813755465[123] = 0;
   out_1708363142813755465[124] = 0;
   out_1708363142813755465[125] = 0;
   out_1708363142813755465[126] = 0;
   out_1708363142813755465[127] = 0;
   out_1708363142813755465[128] = 0;
   out_1708363142813755465[129] = 0;
   out_1708363142813755465[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_1708363142813755465[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_1708363142813755465[132] = 1;
   out_1708363142813755465[133] = 0;
   out_1708363142813755465[134] = 0;
   out_1708363142813755465[135] = 0;
   out_1708363142813755465[136] = 0;
   out_1708363142813755465[137] = 0;
   out_1708363142813755465[138] = 0;
   out_1708363142813755465[139] = 0;
   out_1708363142813755465[140] = 0;
   out_1708363142813755465[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_1708363142813755465[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_1708363142813755465[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_1708363142813755465[144] = 0;
   out_1708363142813755465[145] = 0;
   out_1708363142813755465[146] = 0;
   out_1708363142813755465[147] = 0;
   out_1708363142813755465[148] = 0;
   out_1708363142813755465[149] = 0;
   out_1708363142813755465[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_1708363142813755465[151] = 0;
   out_1708363142813755465[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_1708363142813755465[153] = 0;
   out_1708363142813755465[154] = 1;
   out_1708363142813755465[155] = 0;
   out_1708363142813755465[156] = 0;
   out_1708363142813755465[157] = 0;
   out_1708363142813755465[158] = 0;
   out_1708363142813755465[159] = 0;
   out_1708363142813755465[160] = 0;
   out_1708363142813755465[161] = 0;
   out_1708363142813755465[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_1708363142813755465[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_1708363142813755465[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_1708363142813755465[165] = 0;
   out_1708363142813755465[166] = 0;
   out_1708363142813755465[167] = 0;
   out_1708363142813755465[168] = 0;
   out_1708363142813755465[169] = 0;
   out_1708363142813755465[170] = 0;
   out_1708363142813755465[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_1708363142813755465[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_1708363142813755465[173] = 0;
   out_1708363142813755465[174] = 0;
   out_1708363142813755465[175] = 0;
   out_1708363142813755465[176] = 1;
   out_1708363142813755465[177] = 0;
   out_1708363142813755465[178] = 0;
   out_1708363142813755465[179] = 0;
   out_1708363142813755465[180] = 0;
   out_1708363142813755465[181] = 0;
   out_1708363142813755465[182] = 0;
   out_1708363142813755465[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_1708363142813755465[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_1708363142813755465[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_1708363142813755465[186] = 0;
   out_1708363142813755465[187] = 0;
   out_1708363142813755465[188] = 0;
   out_1708363142813755465[189] = 0;
   out_1708363142813755465[190] = 0;
   out_1708363142813755465[191] = 0;
   out_1708363142813755465[192] = 0;
   out_1708363142813755465[193] = 0;
   out_1708363142813755465[194] = 0;
   out_1708363142813755465[195] = 0;
   out_1708363142813755465[196] = 0;
   out_1708363142813755465[197] = 0;
   out_1708363142813755465[198] = 1;
   out_1708363142813755465[199] = 0;
   out_1708363142813755465[200] = 0;
   out_1708363142813755465[201] = 0;
   out_1708363142813755465[202] = 0;
   out_1708363142813755465[203] = 0;
   out_1708363142813755465[204] = 0;
   out_1708363142813755465[205] = 0;
   out_1708363142813755465[206] = 0;
   out_1708363142813755465[207] = 0;
   out_1708363142813755465[208] = 0;
   out_1708363142813755465[209] = 0;
   out_1708363142813755465[210] = 0;
   out_1708363142813755465[211] = 0;
   out_1708363142813755465[212] = 0;
   out_1708363142813755465[213] = 0;
   out_1708363142813755465[214] = 0;
   out_1708363142813755465[215] = 0;
   out_1708363142813755465[216] = 0;
   out_1708363142813755465[217] = 0;
   out_1708363142813755465[218] = 0;
   out_1708363142813755465[219] = 0;
   out_1708363142813755465[220] = 1;
   out_1708363142813755465[221] = 0;
   out_1708363142813755465[222] = 0;
   out_1708363142813755465[223] = 0;
   out_1708363142813755465[224] = 0;
   out_1708363142813755465[225] = 0;
   out_1708363142813755465[226] = 0;
   out_1708363142813755465[227] = 0;
   out_1708363142813755465[228] = 0;
   out_1708363142813755465[229] = 0;
   out_1708363142813755465[230] = 0;
   out_1708363142813755465[231] = 0;
   out_1708363142813755465[232] = 0;
   out_1708363142813755465[233] = 0;
   out_1708363142813755465[234] = 0;
   out_1708363142813755465[235] = 0;
   out_1708363142813755465[236] = 0;
   out_1708363142813755465[237] = 0;
   out_1708363142813755465[238] = 0;
   out_1708363142813755465[239] = 0;
   out_1708363142813755465[240] = 0;
   out_1708363142813755465[241] = 0;
   out_1708363142813755465[242] = 1;
   out_1708363142813755465[243] = 0;
   out_1708363142813755465[244] = 0;
   out_1708363142813755465[245] = 0;
   out_1708363142813755465[246] = 0;
   out_1708363142813755465[247] = 0;
   out_1708363142813755465[248] = 0;
   out_1708363142813755465[249] = 0;
   out_1708363142813755465[250] = 0;
   out_1708363142813755465[251] = 0;
   out_1708363142813755465[252] = 0;
   out_1708363142813755465[253] = 0;
   out_1708363142813755465[254] = 0;
   out_1708363142813755465[255] = 0;
   out_1708363142813755465[256] = 0;
   out_1708363142813755465[257] = 0;
   out_1708363142813755465[258] = 0;
   out_1708363142813755465[259] = 0;
   out_1708363142813755465[260] = 0;
   out_1708363142813755465[261] = 0;
   out_1708363142813755465[262] = 0;
   out_1708363142813755465[263] = 0;
   out_1708363142813755465[264] = 1;
   out_1708363142813755465[265] = 0;
   out_1708363142813755465[266] = 0;
   out_1708363142813755465[267] = 0;
   out_1708363142813755465[268] = 0;
   out_1708363142813755465[269] = 0;
   out_1708363142813755465[270] = 0;
   out_1708363142813755465[271] = 0;
   out_1708363142813755465[272] = 0;
   out_1708363142813755465[273] = 0;
   out_1708363142813755465[274] = 0;
   out_1708363142813755465[275] = 0;
   out_1708363142813755465[276] = 0;
   out_1708363142813755465[277] = 0;
   out_1708363142813755465[278] = 0;
   out_1708363142813755465[279] = 0;
   out_1708363142813755465[280] = 0;
   out_1708363142813755465[281] = 0;
   out_1708363142813755465[282] = 0;
   out_1708363142813755465[283] = 0;
   out_1708363142813755465[284] = 0;
   out_1708363142813755465[285] = 0;
   out_1708363142813755465[286] = 1;
   out_1708363142813755465[287] = 0;
   out_1708363142813755465[288] = 0;
   out_1708363142813755465[289] = 0;
   out_1708363142813755465[290] = 0;
   out_1708363142813755465[291] = 0;
   out_1708363142813755465[292] = 0;
   out_1708363142813755465[293] = 0;
   out_1708363142813755465[294] = 0;
   out_1708363142813755465[295] = 0;
   out_1708363142813755465[296] = 0;
   out_1708363142813755465[297] = 0;
   out_1708363142813755465[298] = 0;
   out_1708363142813755465[299] = 0;
   out_1708363142813755465[300] = 0;
   out_1708363142813755465[301] = 0;
   out_1708363142813755465[302] = 0;
   out_1708363142813755465[303] = 0;
   out_1708363142813755465[304] = 0;
   out_1708363142813755465[305] = 0;
   out_1708363142813755465[306] = 0;
   out_1708363142813755465[307] = 0;
   out_1708363142813755465[308] = 1;
   out_1708363142813755465[309] = 0;
   out_1708363142813755465[310] = 0;
   out_1708363142813755465[311] = 0;
   out_1708363142813755465[312] = 0;
   out_1708363142813755465[313] = 0;
   out_1708363142813755465[314] = 0;
   out_1708363142813755465[315] = 0;
   out_1708363142813755465[316] = 0;
   out_1708363142813755465[317] = 0;
   out_1708363142813755465[318] = 0;
   out_1708363142813755465[319] = 0;
   out_1708363142813755465[320] = 0;
   out_1708363142813755465[321] = 0;
   out_1708363142813755465[322] = 0;
   out_1708363142813755465[323] = 0;
   out_1708363142813755465[324] = 0;
   out_1708363142813755465[325] = 0;
   out_1708363142813755465[326] = 0;
   out_1708363142813755465[327] = 0;
   out_1708363142813755465[328] = 0;
   out_1708363142813755465[329] = 0;
   out_1708363142813755465[330] = 1;
   out_1708363142813755465[331] = 0;
   out_1708363142813755465[332] = 0;
   out_1708363142813755465[333] = 0;
   out_1708363142813755465[334] = 0;
   out_1708363142813755465[335] = 0;
   out_1708363142813755465[336] = 0;
   out_1708363142813755465[337] = 0;
   out_1708363142813755465[338] = 0;
   out_1708363142813755465[339] = 0;
   out_1708363142813755465[340] = 0;
   out_1708363142813755465[341] = 0;
   out_1708363142813755465[342] = 0;
   out_1708363142813755465[343] = 0;
   out_1708363142813755465[344] = 0;
   out_1708363142813755465[345] = 0;
   out_1708363142813755465[346] = 0;
   out_1708363142813755465[347] = 0;
   out_1708363142813755465[348] = 0;
   out_1708363142813755465[349] = 0;
   out_1708363142813755465[350] = 0;
   out_1708363142813755465[351] = 0;
   out_1708363142813755465[352] = 1;
   out_1708363142813755465[353] = 0;
   out_1708363142813755465[354] = 0;
   out_1708363142813755465[355] = 0;
   out_1708363142813755465[356] = 0;
   out_1708363142813755465[357] = 0;
   out_1708363142813755465[358] = 0;
   out_1708363142813755465[359] = 0;
   out_1708363142813755465[360] = 0;
   out_1708363142813755465[361] = 0;
   out_1708363142813755465[362] = 0;
   out_1708363142813755465[363] = 0;
   out_1708363142813755465[364] = 0;
   out_1708363142813755465[365] = 0;
   out_1708363142813755465[366] = 0;
   out_1708363142813755465[367] = 0;
   out_1708363142813755465[368] = 0;
   out_1708363142813755465[369] = 0;
   out_1708363142813755465[370] = 0;
   out_1708363142813755465[371] = 0;
   out_1708363142813755465[372] = 0;
   out_1708363142813755465[373] = 0;
   out_1708363142813755465[374] = 1;
   out_1708363142813755465[375] = 0;
   out_1708363142813755465[376] = 0;
   out_1708363142813755465[377] = 0;
   out_1708363142813755465[378] = 0;
   out_1708363142813755465[379] = 0;
   out_1708363142813755465[380] = 0;
   out_1708363142813755465[381] = 0;
   out_1708363142813755465[382] = 0;
   out_1708363142813755465[383] = 0;
   out_1708363142813755465[384] = 0;
   out_1708363142813755465[385] = 0;
   out_1708363142813755465[386] = 0;
   out_1708363142813755465[387] = 0;
   out_1708363142813755465[388] = 0;
   out_1708363142813755465[389] = 0;
   out_1708363142813755465[390] = 0;
   out_1708363142813755465[391] = 0;
   out_1708363142813755465[392] = 0;
   out_1708363142813755465[393] = 0;
   out_1708363142813755465[394] = 0;
   out_1708363142813755465[395] = 0;
   out_1708363142813755465[396] = 1;
   out_1708363142813755465[397] = 0;
   out_1708363142813755465[398] = 0;
   out_1708363142813755465[399] = 0;
   out_1708363142813755465[400] = 0;
   out_1708363142813755465[401] = 0;
   out_1708363142813755465[402] = 0;
   out_1708363142813755465[403] = 0;
   out_1708363142813755465[404] = 0;
   out_1708363142813755465[405] = 0;
   out_1708363142813755465[406] = 0;
   out_1708363142813755465[407] = 0;
   out_1708363142813755465[408] = 0;
   out_1708363142813755465[409] = 0;
   out_1708363142813755465[410] = 0;
   out_1708363142813755465[411] = 0;
   out_1708363142813755465[412] = 0;
   out_1708363142813755465[413] = 0;
   out_1708363142813755465[414] = 0;
   out_1708363142813755465[415] = 0;
   out_1708363142813755465[416] = 0;
   out_1708363142813755465[417] = 0;
   out_1708363142813755465[418] = 1;
   out_1708363142813755465[419] = 0;
   out_1708363142813755465[420] = 0;
   out_1708363142813755465[421] = 0;
   out_1708363142813755465[422] = 0;
   out_1708363142813755465[423] = 0;
   out_1708363142813755465[424] = 0;
   out_1708363142813755465[425] = 0;
   out_1708363142813755465[426] = 0;
   out_1708363142813755465[427] = 0;
   out_1708363142813755465[428] = 0;
   out_1708363142813755465[429] = 0;
   out_1708363142813755465[430] = 0;
   out_1708363142813755465[431] = 0;
   out_1708363142813755465[432] = 0;
   out_1708363142813755465[433] = 0;
   out_1708363142813755465[434] = 0;
   out_1708363142813755465[435] = 0;
   out_1708363142813755465[436] = 0;
   out_1708363142813755465[437] = 0;
   out_1708363142813755465[438] = 0;
   out_1708363142813755465[439] = 0;
   out_1708363142813755465[440] = 1;
}
void h_4(double *state, double *unused, double *out_1528163716891991779) {
   out_1528163716891991779[0] = state[10] + state[13];
   out_1528163716891991779[1] = state[11] + state[14];
   out_1528163716891991779[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_6451929225734141090) {
   out_6451929225734141090[0] = 0;
   out_6451929225734141090[1] = 0;
   out_6451929225734141090[2] = 0;
   out_6451929225734141090[3] = 0;
   out_6451929225734141090[4] = 0;
   out_6451929225734141090[5] = 0;
   out_6451929225734141090[6] = 0;
   out_6451929225734141090[7] = 0;
   out_6451929225734141090[8] = 0;
   out_6451929225734141090[9] = 0;
   out_6451929225734141090[10] = 1;
   out_6451929225734141090[11] = 0;
   out_6451929225734141090[12] = 0;
   out_6451929225734141090[13] = 1;
   out_6451929225734141090[14] = 0;
   out_6451929225734141090[15] = 0;
   out_6451929225734141090[16] = 0;
   out_6451929225734141090[17] = 0;
   out_6451929225734141090[18] = 0;
   out_6451929225734141090[19] = 0;
   out_6451929225734141090[20] = 0;
   out_6451929225734141090[21] = 0;
   out_6451929225734141090[22] = 0;
   out_6451929225734141090[23] = 0;
   out_6451929225734141090[24] = 0;
   out_6451929225734141090[25] = 0;
   out_6451929225734141090[26] = 0;
   out_6451929225734141090[27] = 0;
   out_6451929225734141090[28] = 0;
   out_6451929225734141090[29] = 0;
   out_6451929225734141090[30] = 0;
   out_6451929225734141090[31] = 0;
   out_6451929225734141090[32] = 0;
   out_6451929225734141090[33] = 1;
   out_6451929225734141090[34] = 0;
   out_6451929225734141090[35] = 0;
   out_6451929225734141090[36] = 1;
   out_6451929225734141090[37] = 0;
   out_6451929225734141090[38] = 0;
   out_6451929225734141090[39] = 0;
   out_6451929225734141090[40] = 0;
   out_6451929225734141090[41] = 0;
   out_6451929225734141090[42] = 0;
   out_6451929225734141090[43] = 0;
   out_6451929225734141090[44] = 0;
   out_6451929225734141090[45] = 0;
   out_6451929225734141090[46] = 0;
   out_6451929225734141090[47] = 0;
   out_6451929225734141090[48] = 0;
   out_6451929225734141090[49] = 0;
   out_6451929225734141090[50] = 0;
   out_6451929225734141090[51] = 0;
   out_6451929225734141090[52] = 0;
   out_6451929225734141090[53] = 0;
   out_6451929225734141090[54] = 0;
   out_6451929225734141090[55] = 0;
   out_6451929225734141090[56] = 1;
   out_6451929225734141090[57] = 0;
   out_6451929225734141090[58] = 0;
   out_6451929225734141090[59] = 1;
   out_6451929225734141090[60] = 0;
   out_6451929225734141090[61] = 0;
   out_6451929225734141090[62] = 0;
   out_6451929225734141090[63] = 0;
   out_6451929225734141090[64] = 0;
   out_6451929225734141090[65] = 0;
}
void h_9(double *state, double *unused, double *out_5075190892892801008) {
   out_5075190892892801008[0] = state[10];
   out_5075190892892801008[1] = state[11];
   out_5075190892892801008[2] = state[12];
}
void H_9(double *state, double *unused, double *out_835289709530306380) {
   out_835289709530306380[0] = 0;
   out_835289709530306380[1] = 0;
   out_835289709530306380[2] = 0;
   out_835289709530306380[3] = 0;
   out_835289709530306380[4] = 0;
   out_835289709530306380[5] = 0;
   out_835289709530306380[6] = 0;
   out_835289709530306380[7] = 0;
   out_835289709530306380[8] = 0;
   out_835289709530306380[9] = 0;
   out_835289709530306380[10] = 1;
   out_835289709530306380[11] = 0;
   out_835289709530306380[12] = 0;
   out_835289709530306380[13] = 0;
   out_835289709530306380[14] = 0;
   out_835289709530306380[15] = 0;
   out_835289709530306380[16] = 0;
   out_835289709530306380[17] = 0;
   out_835289709530306380[18] = 0;
   out_835289709530306380[19] = 0;
   out_835289709530306380[20] = 0;
   out_835289709530306380[21] = 0;
   out_835289709530306380[22] = 0;
   out_835289709530306380[23] = 0;
   out_835289709530306380[24] = 0;
   out_835289709530306380[25] = 0;
   out_835289709530306380[26] = 0;
   out_835289709530306380[27] = 0;
   out_835289709530306380[28] = 0;
   out_835289709530306380[29] = 0;
   out_835289709530306380[30] = 0;
   out_835289709530306380[31] = 0;
   out_835289709530306380[32] = 0;
   out_835289709530306380[33] = 1;
   out_835289709530306380[34] = 0;
   out_835289709530306380[35] = 0;
   out_835289709530306380[36] = 0;
   out_835289709530306380[37] = 0;
   out_835289709530306380[38] = 0;
   out_835289709530306380[39] = 0;
   out_835289709530306380[40] = 0;
   out_835289709530306380[41] = 0;
   out_835289709530306380[42] = 0;
   out_835289709530306380[43] = 0;
   out_835289709530306380[44] = 0;
   out_835289709530306380[45] = 0;
   out_835289709530306380[46] = 0;
   out_835289709530306380[47] = 0;
   out_835289709530306380[48] = 0;
   out_835289709530306380[49] = 0;
   out_835289709530306380[50] = 0;
   out_835289709530306380[51] = 0;
   out_835289709530306380[52] = 0;
   out_835289709530306380[53] = 0;
   out_835289709530306380[54] = 0;
   out_835289709530306380[55] = 0;
   out_835289709530306380[56] = 1;
   out_835289709530306380[57] = 0;
   out_835289709530306380[58] = 0;
   out_835289709530306380[59] = 0;
   out_835289709530306380[60] = 0;
   out_835289709530306380[61] = 0;
   out_835289709530306380[62] = 0;
   out_835289709530306380[63] = 0;
   out_835289709530306380[64] = 0;
   out_835289709530306380[65] = 0;
}
void h_10(double *state, double *unused, double *out_842381642263115200) {
   out_842381642263115200[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_842381642263115200[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_842381642263115200[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_5010370349131368794) {
   out_5010370349131368794[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_5010370349131368794[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_5010370349131368794[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_5010370349131368794[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_5010370349131368794[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_5010370349131368794[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_5010370349131368794[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_5010370349131368794[7] = 0;
   out_5010370349131368794[8] = 0;
   out_5010370349131368794[9] = 0;
   out_5010370349131368794[10] = 0;
   out_5010370349131368794[11] = 0;
   out_5010370349131368794[12] = 0;
   out_5010370349131368794[13] = 0;
   out_5010370349131368794[14] = 0;
   out_5010370349131368794[15] = 0;
   out_5010370349131368794[16] = 1;
   out_5010370349131368794[17] = 0;
   out_5010370349131368794[18] = 0;
   out_5010370349131368794[19] = 1;
   out_5010370349131368794[20] = 0;
   out_5010370349131368794[21] = 0;
   out_5010370349131368794[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_5010370349131368794[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_5010370349131368794[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_5010370349131368794[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_5010370349131368794[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_5010370349131368794[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_5010370349131368794[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_5010370349131368794[29] = 0;
   out_5010370349131368794[30] = 0;
   out_5010370349131368794[31] = 0;
   out_5010370349131368794[32] = 0;
   out_5010370349131368794[33] = 0;
   out_5010370349131368794[34] = 0;
   out_5010370349131368794[35] = 0;
   out_5010370349131368794[36] = 0;
   out_5010370349131368794[37] = 0;
   out_5010370349131368794[38] = 0;
   out_5010370349131368794[39] = 1;
   out_5010370349131368794[40] = 0;
   out_5010370349131368794[41] = 0;
   out_5010370349131368794[42] = 1;
   out_5010370349131368794[43] = 0;
   out_5010370349131368794[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_5010370349131368794[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_5010370349131368794[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_5010370349131368794[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_5010370349131368794[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_5010370349131368794[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_5010370349131368794[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_5010370349131368794[51] = 0;
   out_5010370349131368794[52] = 0;
   out_5010370349131368794[53] = 0;
   out_5010370349131368794[54] = 0;
   out_5010370349131368794[55] = 0;
   out_5010370349131368794[56] = 0;
   out_5010370349131368794[57] = 0;
   out_5010370349131368794[58] = 0;
   out_5010370349131368794[59] = 0;
   out_5010370349131368794[60] = 0;
   out_5010370349131368794[61] = 0;
   out_5010370349131368794[62] = 1;
   out_5010370349131368794[63] = 0;
   out_5010370349131368794[64] = 0;
   out_5010370349131368794[65] = 1;
}
void h_12(double *state, double *unused, double *out_5441043766607214819) {
   out_5441043766607214819[0] = state[0];
   out_5441043766607214819[1] = state[1];
   out_5441043766607214819[2] = state[2];
}
void H_12(double *state, double *unused, double *out_5613556470932677530) {
   out_5613556470932677530[0] = 1;
   out_5613556470932677530[1] = 0;
   out_5613556470932677530[2] = 0;
   out_5613556470932677530[3] = 0;
   out_5613556470932677530[4] = 0;
   out_5613556470932677530[5] = 0;
   out_5613556470932677530[6] = 0;
   out_5613556470932677530[7] = 0;
   out_5613556470932677530[8] = 0;
   out_5613556470932677530[9] = 0;
   out_5613556470932677530[10] = 0;
   out_5613556470932677530[11] = 0;
   out_5613556470932677530[12] = 0;
   out_5613556470932677530[13] = 0;
   out_5613556470932677530[14] = 0;
   out_5613556470932677530[15] = 0;
   out_5613556470932677530[16] = 0;
   out_5613556470932677530[17] = 0;
   out_5613556470932677530[18] = 0;
   out_5613556470932677530[19] = 0;
   out_5613556470932677530[20] = 0;
   out_5613556470932677530[21] = 0;
   out_5613556470932677530[22] = 0;
   out_5613556470932677530[23] = 1;
   out_5613556470932677530[24] = 0;
   out_5613556470932677530[25] = 0;
   out_5613556470932677530[26] = 0;
   out_5613556470932677530[27] = 0;
   out_5613556470932677530[28] = 0;
   out_5613556470932677530[29] = 0;
   out_5613556470932677530[30] = 0;
   out_5613556470932677530[31] = 0;
   out_5613556470932677530[32] = 0;
   out_5613556470932677530[33] = 0;
   out_5613556470932677530[34] = 0;
   out_5613556470932677530[35] = 0;
   out_5613556470932677530[36] = 0;
   out_5613556470932677530[37] = 0;
   out_5613556470932677530[38] = 0;
   out_5613556470932677530[39] = 0;
   out_5613556470932677530[40] = 0;
   out_5613556470932677530[41] = 0;
   out_5613556470932677530[42] = 0;
   out_5613556470932677530[43] = 0;
   out_5613556470932677530[44] = 0;
   out_5613556470932677530[45] = 0;
   out_5613556470932677530[46] = 1;
   out_5613556470932677530[47] = 0;
   out_5613556470932677530[48] = 0;
   out_5613556470932677530[49] = 0;
   out_5613556470932677530[50] = 0;
   out_5613556470932677530[51] = 0;
   out_5613556470932677530[52] = 0;
   out_5613556470932677530[53] = 0;
   out_5613556470932677530[54] = 0;
   out_5613556470932677530[55] = 0;
   out_5613556470932677530[56] = 0;
   out_5613556470932677530[57] = 0;
   out_5613556470932677530[58] = 0;
   out_5613556470932677530[59] = 0;
   out_5613556470932677530[60] = 0;
   out_5613556470932677530[61] = 0;
   out_5613556470932677530[62] = 0;
   out_5613556470932677530[63] = 0;
   out_5613556470932677530[64] = 0;
   out_5613556470932677530[65] = 0;
}
void h_35(double *state, double *unused, double *out_1872850465453208056) {
   out_1872850465453208056[0] = state[7];
   out_1872850465453208056[1] = state[8];
   out_1872850465453208056[2] = state[9];
}
void H_35(double *state, double *unused, double *out_1313090214622834414) {
   out_1313090214622834414[0] = 0;
   out_1313090214622834414[1] = 0;
   out_1313090214622834414[2] = 0;
   out_1313090214622834414[3] = 0;
   out_1313090214622834414[4] = 0;
   out_1313090214622834414[5] = 0;
   out_1313090214622834414[6] = 0;
   out_1313090214622834414[7] = 1;
   out_1313090214622834414[8] = 0;
   out_1313090214622834414[9] = 0;
   out_1313090214622834414[10] = 0;
   out_1313090214622834414[11] = 0;
   out_1313090214622834414[12] = 0;
   out_1313090214622834414[13] = 0;
   out_1313090214622834414[14] = 0;
   out_1313090214622834414[15] = 0;
   out_1313090214622834414[16] = 0;
   out_1313090214622834414[17] = 0;
   out_1313090214622834414[18] = 0;
   out_1313090214622834414[19] = 0;
   out_1313090214622834414[20] = 0;
   out_1313090214622834414[21] = 0;
   out_1313090214622834414[22] = 0;
   out_1313090214622834414[23] = 0;
   out_1313090214622834414[24] = 0;
   out_1313090214622834414[25] = 0;
   out_1313090214622834414[26] = 0;
   out_1313090214622834414[27] = 0;
   out_1313090214622834414[28] = 0;
   out_1313090214622834414[29] = 0;
   out_1313090214622834414[30] = 1;
   out_1313090214622834414[31] = 0;
   out_1313090214622834414[32] = 0;
   out_1313090214622834414[33] = 0;
   out_1313090214622834414[34] = 0;
   out_1313090214622834414[35] = 0;
   out_1313090214622834414[36] = 0;
   out_1313090214622834414[37] = 0;
   out_1313090214622834414[38] = 0;
   out_1313090214622834414[39] = 0;
   out_1313090214622834414[40] = 0;
   out_1313090214622834414[41] = 0;
   out_1313090214622834414[42] = 0;
   out_1313090214622834414[43] = 0;
   out_1313090214622834414[44] = 0;
   out_1313090214622834414[45] = 0;
   out_1313090214622834414[46] = 0;
   out_1313090214622834414[47] = 0;
   out_1313090214622834414[48] = 0;
   out_1313090214622834414[49] = 0;
   out_1313090214622834414[50] = 0;
   out_1313090214622834414[51] = 0;
   out_1313090214622834414[52] = 0;
   out_1313090214622834414[53] = 1;
   out_1313090214622834414[54] = 0;
   out_1313090214622834414[55] = 0;
   out_1313090214622834414[56] = 0;
   out_1313090214622834414[57] = 0;
   out_1313090214622834414[58] = 0;
   out_1313090214622834414[59] = 0;
   out_1313090214622834414[60] = 0;
   out_1313090214622834414[61] = 0;
   out_1313090214622834414[62] = 0;
   out_1313090214622834414[63] = 0;
   out_1313090214622834414[64] = 0;
   out_1313090214622834414[65] = 0;
}
void h_32(double *state, double *unused, double *out_6110767287042918546) {
   out_6110767287042918546[0] = state[3];
   out_6110767287042918546[1] = state[4];
   out_6110767287042918546[2] = state[5];
   out_6110767287042918546[3] = state[6];
}
void H_32(double *state, double *unused, double *out_1573391208225620082) {
   out_1573391208225620082[0] = 0;
   out_1573391208225620082[1] = 0;
   out_1573391208225620082[2] = 0;
   out_1573391208225620082[3] = 1;
   out_1573391208225620082[4] = 0;
   out_1573391208225620082[5] = 0;
   out_1573391208225620082[6] = 0;
   out_1573391208225620082[7] = 0;
   out_1573391208225620082[8] = 0;
   out_1573391208225620082[9] = 0;
   out_1573391208225620082[10] = 0;
   out_1573391208225620082[11] = 0;
   out_1573391208225620082[12] = 0;
   out_1573391208225620082[13] = 0;
   out_1573391208225620082[14] = 0;
   out_1573391208225620082[15] = 0;
   out_1573391208225620082[16] = 0;
   out_1573391208225620082[17] = 0;
   out_1573391208225620082[18] = 0;
   out_1573391208225620082[19] = 0;
   out_1573391208225620082[20] = 0;
   out_1573391208225620082[21] = 0;
   out_1573391208225620082[22] = 0;
   out_1573391208225620082[23] = 0;
   out_1573391208225620082[24] = 0;
   out_1573391208225620082[25] = 0;
   out_1573391208225620082[26] = 1;
   out_1573391208225620082[27] = 0;
   out_1573391208225620082[28] = 0;
   out_1573391208225620082[29] = 0;
   out_1573391208225620082[30] = 0;
   out_1573391208225620082[31] = 0;
   out_1573391208225620082[32] = 0;
   out_1573391208225620082[33] = 0;
   out_1573391208225620082[34] = 0;
   out_1573391208225620082[35] = 0;
   out_1573391208225620082[36] = 0;
   out_1573391208225620082[37] = 0;
   out_1573391208225620082[38] = 0;
   out_1573391208225620082[39] = 0;
   out_1573391208225620082[40] = 0;
   out_1573391208225620082[41] = 0;
   out_1573391208225620082[42] = 0;
   out_1573391208225620082[43] = 0;
   out_1573391208225620082[44] = 0;
   out_1573391208225620082[45] = 0;
   out_1573391208225620082[46] = 0;
   out_1573391208225620082[47] = 0;
   out_1573391208225620082[48] = 0;
   out_1573391208225620082[49] = 1;
   out_1573391208225620082[50] = 0;
   out_1573391208225620082[51] = 0;
   out_1573391208225620082[52] = 0;
   out_1573391208225620082[53] = 0;
   out_1573391208225620082[54] = 0;
   out_1573391208225620082[55] = 0;
   out_1573391208225620082[56] = 0;
   out_1573391208225620082[57] = 0;
   out_1573391208225620082[58] = 0;
   out_1573391208225620082[59] = 0;
   out_1573391208225620082[60] = 0;
   out_1573391208225620082[61] = 0;
   out_1573391208225620082[62] = 0;
   out_1573391208225620082[63] = 0;
   out_1573391208225620082[64] = 0;
   out_1573391208225620082[65] = 0;
   out_1573391208225620082[66] = 0;
   out_1573391208225620082[67] = 0;
   out_1573391208225620082[68] = 0;
   out_1573391208225620082[69] = 0;
   out_1573391208225620082[70] = 0;
   out_1573391208225620082[71] = 0;
   out_1573391208225620082[72] = 1;
   out_1573391208225620082[73] = 0;
   out_1573391208225620082[74] = 0;
   out_1573391208225620082[75] = 0;
   out_1573391208225620082[76] = 0;
   out_1573391208225620082[77] = 0;
   out_1573391208225620082[78] = 0;
   out_1573391208225620082[79] = 0;
   out_1573391208225620082[80] = 0;
   out_1573391208225620082[81] = 0;
   out_1573391208225620082[82] = 0;
   out_1573391208225620082[83] = 0;
   out_1573391208225620082[84] = 0;
   out_1573391208225620082[85] = 0;
   out_1573391208225620082[86] = 0;
   out_1573391208225620082[87] = 0;
}
void h_13(double *state, double *unused, double *out_549733664283291714) {
   out_549733664283291714[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_549733664283291714[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_549733664283291714[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_1107750194629656687) {
   out_1107750194629656687[0] = 0;
   out_1107750194629656687[1] = 0;
   out_1107750194629656687[2] = 0;
   out_1107750194629656687[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_1107750194629656687[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_1107750194629656687[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_1107750194629656687[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_1107750194629656687[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_1107750194629656687[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_1107750194629656687[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_1107750194629656687[10] = 0;
   out_1107750194629656687[11] = 0;
   out_1107750194629656687[12] = 0;
   out_1107750194629656687[13] = 0;
   out_1107750194629656687[14] = 0;
   out_1107750194629656687[15] = 0;
   out_1107750194629656687[16] = 0;
   out_1107750194629656687[17] = 0;
   out_1107750194629656687[18] = 0;
   out_1107750194629656687[19] = 0;
   out_1107750194629656687[20] = 0;
   out_1107750194629656687[21] = 0;
   out_1107750194629656687[22] = 0;
   out_1107750194629656687[23] = 0;
   out_1107750194629656687[24] = 0;
   out_1107750194629656687[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_1107750194629656687[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_1107750194629656687[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_1107750194629656687[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_1107750194629656687[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_1107750194629656687[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_1107750194629656687[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_1107750194629656687[32] = 0;
   out_1107750194629656687[33] = 0;
   out_1107750194629656687[34] = 0;
   out_1107750194629656687[35] = 0;
   out_1107750194629656687[36] = 0;
   out_1107750194629656687[37] = 0;
   out_1107750194629656687[38] = 0;
   out_1107750194629656687[39] = 0;
   out_1107750194629656687[40] = 0;
   out_1107750194629656687[41] = 0;
   out_1107750194629656687[42] = 0;
   out_1107750194629656687[43] = 0;
   out_1107750194629656687[44] = 0;
   out_1107750194629656687[45] = 0;
   out_1107750194629656687[46] = 0;
   out_1107750194629656687[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_1107750194629656687[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_1107750194629656687[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_1107750194629656687[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_1107750194629656687[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_1107750194629656687[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_1107750194629656687[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_1107750194629656687[54] = 0;
   out_1107750194629656687[55] = 0;
   out_1107750194629656687[56] = 0;
   out_1107750194629656687[57] = 0;
   out_1107750194629656687[58] = 0;
   out_1107750194629656687[59] = 0;
   out_1107750194629656687[60] = 0;
   out_1107750194629656687[61] = 0;
   out_1107750194629656687[62] = 0;
   out_1107750194629656687[63] = 0;
   out_1107750194629656687[64] = 0;
   out_1107750194629656687[65] = 0;
}
void h_14(double *state, double *unused, double *out_5075190892892801008) {
   out_5075190892892801008[0] = state[10];
   out_5075190892892801008[1] = state[11];
   out_5075190892892801008[2] = state[12];
}
void H_14(double *state, double *unused, double *out_835289709530306380) {
   out_835289709530306380[0] = 0;
   out_835289709530306380[1] = 0;
   out_835289709530306380[2] = 0;
   out_835289709530306380[3] = 0;
   out_835289709530306380[4] = 0;
   out_835289709530306380[5] = 0;
   out_835289709530306380[6] = 0;
   out_835289709530306380[7] = 0;
   out_835289709530306380[8] = 0;
   out_835289709530306380[9] = 0;
   out_835289709530306380[10] = 1;
   out_835289709530306380[11] = 0;
   out_835289709530306380[12] = 0;
   out_835289709530306380[13] = 0;
   out_835289709530306380[14] = 0;
   out_835289709530306380[15] = 0;
   out_835289709530306380[16] = 0;
   out_835289709530306380[17] = 0;
   out_835289709530306380[18] = 0;
   out_835289709530306380[19] = 0;
   out_835289709530306380[20] = 0;
   out_835289709530306380[21] = 0;
   out_835289709530306380[22] = 0;
   out_835289709530306380[23] = 0;
   out_835289709530306380[24] = 0;
   out_835289709530306380[25] = 0;
   out_835289709530306380[26] = 0;
   out_835289709530306380[27] = 0;
   out_835289709530306380[28] = 0;
   out_835289709530306380[29] = 0;
   out_835289709530306380[30] = 0;
   out_835289709530306380[31] = 0;
   out_835289709530306380[32] = 0;
   out_835289709530306380[33] = 1;
   out_835289709530306380[34] = 0;
   out_835289709530306380[35] = 0;
   out_835289709530306380[36] = 0;
   out_835289709530306380[37] = 0;
   out_835289709530306380[38] = 0;
   out_835289709530306380[39] = 0;
   out_835289709530306380[40] = 0;
   out_835289709530306380[41] = 0;
   out_835289709530306380[42] = 0;
   out_835289709530306380[43] = 0;
   out_835289709530306380[44] = 0;
   out_835289709530306380[45] = 0;
   out_835289709530306380[46] = 0;
   out_835289709530306380[47] = 0;
   out_835289709530306380[48] = 0;
   out_835289709530306380[49] = 0;
   out_835289709530306380[50] = 0;
   out_835289709530306380[51] = 0;
   out_835289709530306380[52] = 0;
   out_835289709530306380[53] = 0;
   out_835289709530306380[54] = 0;
   out_835289709530306380[55] = 0;
   out_835289709530306380[56] = 1;
   out_835289709530306380[57] = 0;
   out_835289709530306380[58] = 0;
   out_835289709530306380[59] = 0;
   out_835289709530306380[60] = 0;
   out_835289709530306380[61] = 0;
   out_835289709530306380[62] = 0;
   out_835289709530306380[63] = 0;
   out_835289709530306380[64] = 0;
   out_835289709530306380[65] = 0;
}
void h_33(double *state, double *unused, double *out_1123921101808459626) {
   out_1123921101808459626[0] = state[16];
   out_1123921101808459626[1] = state[17];
   out_1123921101808459626[2] = state[18];
}
void H_33(double *state, double *unused, double *out_6937067565813002773) {
   out_6937067565813002773[0] = 0;
   out_6937067565813002773[1] = 0;
   out_6937067565813002773[2] = 0;
   out_6937067565813002773[3] = 0;
   out_6937067565813002773[4] = 0;
   out_6937067565813002773[5] = 0;
   out_6937067565813002773[6] = 0;
   out_6937067565813002773[7] = 0;
   out_6937067565813002773[8] = 0;
   out_6937067565813002773[9] = 0;
   out_6937067565813002773[10] = 0;
   out_6937067565813002773[11] = 0;
   out_6937067565813002773[12] = 0;
   out_6937067565813002773[13] = 0;
   out_6937067565813002773[14] = 0;
   out_6937067565813002773[15] = 0;
   out_6937067565813002773[16] = 1;
   out_6937067565813002773[17] = 0;
   out_6937067565813002773[18] = 0;
   out_6937067565813002773[19] = 0;
   out_6937067565813002773[20] = 0;
   out_6937067565813002773[21] = 0;
   out_6937067565813002773[22] = 0;
   out_6937067565813002773[23] = 0;
   out_6937067565813002773[24] = 0;
   out_6937067565813002773[25] = 0;
   out_6937067565813002773[26] = 0;
   out_6937067565813002773[27] = 0;
   out_6937067565813002773[28] = 0;
   out_6937067565813002773[29] = 0;
   out_6937067565813002773[30] = 0;
   out_6937067565813002773[31] = 0;
   out_6937067565813002773[32] = 0;
   out_6937067565813002773[33] = 0;
   out_6937067565813002773[34] = 0;
   out_6937067565813002773[35] = 0;
   out_6937067565813002773[36] = 0;
   out_6937067565813002773[37] = 0;
   out_6937067565813002773[38] = 0;
   out_6937067565813002773[39] = 1;
   out_6937067565813002773[40] = 0;
   out_6937067565813002773[41] = 0;
   out_6937067565813002773[42] = 0;
   out_6937067565813002773[43] = 0;
   out_6937067565813002773[44] = 0;
   out_6937067565813002773[45] = 0;
   out_6937067565813002773[46] = 0;
   out_6937067565813002773[47] = 0;
   out_6937067565813002773[48] = 0;
   out_6937067565813002773[49] = 0;
   out_6937067565813002773[50] = 0;
   out_6937067565813002773[51] = 0;
   out_6937067565813002773[52] = 0;
   out_6937067565813002773[53] = 0;
   out_6937067565813002773[54] = 0;
   out_6937067565813002773[55] = 0;
   out_6937067565813002773[56] = 0;
   out_6937067565813002773[57] = 0;
   out_6937067565813002773[58] = 0;
   out_6937067565813002773[59] = 0;
   out_6937067565813002773[60] = 0;
   out_6937067565813002773[61] = 0;
   out_6937067565813002773[62] = 1;
   out_6937067565813002773[63] = 0;
   out_6937067565813002773[64] = 0;
   out_6937067565813002773[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_1197758814798533388) {
  H(in_vec, out_1197758814798533388);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_4286215774710425169) {
  err_fun(nom_x, delta_x, out_4286215774710425169);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_3781385446178574208) {
  inv_err_fun(nom_x, true_x, out_3781385446178574208);
}
void live_H_mod_fun(double *state, double *out_5816692744659529436) {
  H_mod_fun(state, out_5816692744659529436);
}
void live_f_fun(double *state, double dt, double *out_5690960620373720106) {
  f_fun(state,  dt, out_5690960620373720106);
}
void live_F_fun(double *state, double dt, double *out_1708363142813755465) {
  F_fun(state,  dt, out_1708363142813755465);
}
void live_h_4(double *state, double *unused, double *out_1528163716891991779) {
  h_4(state, unused, out_1528163716891991779);
}
void live_H_4(double *state, double *unused, double *out_6451929225734141090) {
  H_4(state, unused, out_6451929225734141090);
}
void live_h_9(double *state, double *unused, double *out_5075190892892801008) {
  h_9(state, unused, out_5075190892892801008);
}
void live_H_9(double *state, double *unused, double *out_835289709530306380) {
  H_9(state, unused, out_835289709530306380);
}
void live_h_10(double *state, double *unused, double *out_842381642263115200) {
  h_10(state, unused, out_842381642263115200);
}
void live_H_10(double *state, double *unused, double *out_5010370349131368794) {
  H_10(state, unused, out_5010370349131368794);
}
void live_h_12(double *state, double *unused, double *out_5441043766607214819) {
  h_12(state, unused, out_5441043766607214819);
}
void live_H_12(double *state, double *unused, double *out_5613556470932677530) {
  H_12(state, unused, out_5613556470932677530);
}
void live_h_35(double *state, double *unused, double *out_1872850465453208056) {
  h_35(state, unused, out_1872850465453208056);
}
void live_H_35(double *state, double *unused, double *out_1313090214622834414) {
  H_35(state, unused, out_1313090214622834414);
}
void live_h_32(double *state, double *unused, double *out_6110767287042918546) {
  h_32(state, unused, out_6110767287042918546);
}
void live_H_32(double *state, double *unused, double *out_1573391208225620082) {
  H_32(state, unused, out_1573391208225620082);
}
void live_h_13(double *state, double *unused, double *out_549733664283291714) {
  h_13(state, unused, out_549733664283291714);
}
void live_H_13(double *state, double *unused, double *out_1107750194629656687) {
  H_13(state, unused, out_1107750194629656687);
}
void live_h_14(double *state, double *unused, double *out_5075190892892801008) {
  h_14(state, unused, out_5075190892892801008);
}
void live_H_14(double *state, double *unused, double *out_835289709530306380) {
  H_14(state, unused, out_835289709530306380);
}
void live_h_33(double *state, double *unused, double *out_1123921101808459626) {
  h_33(state, unused, out_1123921101808459626);
}
void live_H_33(double *state, double *unused, double *out_6937067565813002773) {
  H_33(state, unused, out_6937067565813002773);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
